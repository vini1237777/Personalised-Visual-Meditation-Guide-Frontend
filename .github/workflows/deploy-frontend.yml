name: Deploy REACT App on nginx

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read
  issues: write

concurrency:
  group: frontend-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: self-hosted
    environment: PROD_FRONTEND_ENV
    env:
      REACT_APP_API: ${{ secrets.REACT_APP_API }}
      CI: true
      NPM_CONFIG_AUDIT: false
      NPM_CONFIG_FUND: false
      # Temporary guard until your deps are aligned:
      NPM_CONFIG_LEGACY_PEER_DEPS: true
      # CRA-only: speeds build & smaller output. Harmless if unused.
      GENERATE_SOURCEMAP: "false"
      # If memory is tight during minify:
      NODE_OPTIONS: --max_old_space_size=2048

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install frontend dependencies
        run: npm install -f

      # - name: Install dependencies
      #   run: |
      #     rm -rf node_modules
      #     if [ -f package-lock.json ]; then
      #       npm ci
      #     else
      #       npm install -f
      #     fi

      - name: Create frontend .env file
        run: |
          echo "REACT_APP_API=${REACT_APP_API}" > .env
          echo "Created .env:"
          cat .env

      - name: Build frontend
        run: |
          echo "Starting build..."
          npm run build
          echo "Build done."

      - name: Deploy frontend to Nginx
        run: |
          sudo rm -rf /var/www/html/*
          sudo cp -r build/* /var/www/html/
